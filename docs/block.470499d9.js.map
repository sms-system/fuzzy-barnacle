{"version":3,"sources":["../components/dropdown/block.js"],"names":["OPENNED_CLASSNAME","BODY_MOBILE_THEME_CLASSNAME","BODY_LOCKED_CLASSNAME","addBlurHandler","target","dropdown","listener","addEventListener","event","relatedTarget","parentNode","removeEventListener","bodyClasses","document","body","classList","contains","remove","dataset","isOpenned","elements","getElementsByClassName","i","length","element","timer","setTimeout","add","blur","clearTimeout"],"mappings":";AAAA,IAAMA,EAAoB,uBACpBC,EAA8B,gBAC9BC,EAAwB,WAE9B,SAASC,EAAgBC,EAAQC,GACzBC,IAAAA,EAAWF,EAAOG,iBAAiB,OAAQ,SAACC,GAE5CA,GADCH,IAAYA,EAAWG,EAAMJ,QAC9BI,EAAMC,cAEDC,IADHA,IAAAA,EAAaF,EAAMC,cAAcC,WAC9BA,GAAY,CACbA,GAAAA,IAAeL,EAGjB,OAFAD,EAAOO,oBAAoB,OAAQL,QACnCH,EAAeK,EAAMC,cAAeJ,GAGtCK,EAAaA,EAAWA,WAGtBE,IAAAA,EAAcC,SAASC,KAAKC,UAC9BH,EAAYI,SAASf,IACvBW,EAAYK,OAAOf,GAErBG,EAASU,UAAUE,OAAOjB,UACnBK,EAASa,QAAQC,UACxBf,EAAOO,oBAAoB,OAAQL,KAIvCO,SAASN,iBAAiB,mBAAoB,WAEvC,IADCa,IAAAA,EAAWP,SAASQ,uBAAuB,YACxCC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAAK,CACpCE,IAAAA,EAAUJ,EAASE,GACnBG,EAAQ,GACZD,EAAQjB,iBAAiB,QAAU,SAACiB,EAASC,GAAU,OAAA,WAGrDA,EAAMN,UAAYO,WAAW,WAAMF,OAAAA,EAAQN,QAAQC,WAAY,GAAM,KAErEK,EAAQT,UAAUY,IAAI3B,GAEhBY,IAAAA,EAAcC,SAASC,KAAKC,UAC9BH,EAAYI,SAASf,IACvBW,EAAYe,IAAIzB,IATe,CAWhCsB,EAASC,IACZD,EAAQjB,iBAAiB,QAAU,SAACiB,EAASC,GAAU,OAAA,SAACjB,GAElDA,GAAAA,EAAMJ,SAAWoB,EACjB,OAACA,EAAQN,QAAQC,eAKrBK,EAAQI,QAJFH,EAAMN,WAAaU,aAAaJ,EAAMN,gBAC1CK,EAAQN,QAAQC,WAAY,KALG,CAShCK,EAASC,IACZtB,EAAeqB,EAAS","file":"block.470499d9.js","sourceRoot":"../src/pages","sourcesContent":["const OPENNED_CLASSNAME = 'Dropdown--is-openned'\nconst BODY_MOBILE_THEME_CLASSNAME = 'Theme--mobile'\nconst BODY_LOCKED_CLASSNAME = '__locked'\n\nfunction addBlurHandler (target, dropdown) {\n  const listener = target.addEventListener('blur', (event) => {\n    if (!dropdown) { dropdown = event.target }\n    if (event.relatedTarget) {\n      let parentNode = event.relatedTarget.parentNode\n      while (parentNode) {\n        if (parentNode === dropdown) {\n          target.removeEventListener('blur', listener)\n          addBlurHandler(event.relatedTarget, dropdown)\n          return\n        }\n        parentNode = parentNode.parentNode\n      }\n    }\n    const bodyClasses = document.body.classList\n    if (bodyClasses.contains(BODY_MOBILE_THEME_CLASSNAME)) {\n      bodyClasses.remove(BODY_LOCKED_CLASSNAME)\n    }\n    dropdown.classList.remove(OPENNED_CLASSNAME)\n    delete dropdown.dataset.isOpenned\n    target.removeEventListener('blur', listener)\n  })\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const elements = document.getElementsByClassName('Dropdown')\n  for (let i = 0; i < elements.length; i++) {\n    let element = elements[i]\n    let timer = {}\n    element.addEventListener('focus', ((element, timer) => () => {\n      // If wasn't click event for 0.8ms after focus, set openned state\n      // Its adds side feature â€” long tap for dropdown content preview\n      timer.isOpenned = setTimeout(() => element.dataset.isOpenned = true, 800)\n\n      element.classList.add(OPENNED_CLASSNAME)\n\n      const bodyClasses = document.body.classList\n      if (bodyClasses.contains(BODY_MOBILE_THEME_CLASSNAME)) {\n        bodyClasses.add(BODY_LOCKED_CLASSNAME)\n      }\n    })(element, timer))\n    element.addEventListener('click', ((element, timer) => (event) => {\n      // If no openned state, prevent closing\n      if (event.target !== element) { return }\n      if (!element.dataset.isOpenned) {\n        if (timer.isOpenned) { clearTimeout(timer.isOpenned) }\n        element.dataset.isOpenned = true\n        return\n      }\n      element.blur()\n    })(element, timer))\n    addBlurHandler(element, null)\n  }\n})"]}